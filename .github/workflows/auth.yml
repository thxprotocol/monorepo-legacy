name: Auth CI

on:
    push:
        paths:
            - 'apps/auth/**'
            - 'libs/**'
            - 'yarn.lock'
            - '.github/workflows/auth.yml'

jobs:
    buildAndTest:
        name: CI Pipeline
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
              with:
                  submodules: true

            - name: Run test
              run: docker compose -f docker-compose.yml -f docker-compose.auth.yml run -T auth sh -c "npx nx lint auth && npx nx test auth"

    bumpVersion:
        name: 'Bump Version on main'
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        needs: buildAndTest
        outputs:
            newTag: ${{ steps.version-bump.outputs.newTag }}

        steps:
            - name: 'Checkout source code'
              uses: 'actions/checkout@v2'
              with:
                  ref: ${{ github.ref }}

            - name: 'Automated Version Bump'
              id: version-bump
              uses: 'phips28/gh-action-bump-version@master'
              with:
                  tag-prefix: 'v'
                  commit-message: 'CI: bumps version to {{version}} for AUTH [skip ci]'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  PACKAGEJSON_DIR: 'apps/auth'

    buildAndPushImage:
        name: Build and Push docker image
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        needs: bumpVersion
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Install Node.js 16.x
              uses: actions/setup-node@v1
              with:
                  node-version: 16.x

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-west-3

            - name: Login to ECR
              uses: docker/login-action@v1
              with:
                  registry: 275440070213.dkr.ecr.eu-west-3.amazonaws.com

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v3
              with:
                  images: |
                      275440070213.dkr.ecr.eu-west-3.amazonaws.com/auth
                  tags: |
                      type=ref,event=branch
                      type=sha
                      type=semver,pattern={{version}},value=${{needs.bumpVersion.outputs.newTag}}
                      type=semver,pattern={{major}}.{{minor}},value=${{needs.bumpVersion.outputs.newTag}}
                      type=semver,pattern={{raw}},value=${{needs.bumpVersion.outputs.newTag}}

            - name: Set correct version
              run: npm version ${{needs.bumpVersion.outputs.newTag}} --allow-same-version=true --git-tag-version=false
              working-directory: ./apps/auth

            - name: Build
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: apps/auth/Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

    buildAndPushHotfixImage:
        name: Build and Push Hotfix docker image
        runs-on: ubuntu-latest
        if: startsWith(github.ref,'refs/heads/hotfix/')
        needs: buildAndTest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Install Node.js 16.x
              uses: actions/setup-node@v1
              with:
                  node-version: 16.x

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-west-3

            - name: Login to ECR
              uses: docker/login-action@v1
              with:
                  registry: 275440070213.dkr.ecr.eu-west-3.amazonaws.com

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v3
              with:
                  images: |
                      275440070213.dkr.ecr.eu-west-3.amazonaws.com/auth
                  tags: |
                      type=ref,event=branch
                      type=sha

            - name: Build
              uses: docker/build-push-action@v2
              with:
                  context: .
                  push: true
                  file: apps/auth/Dockerfile
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

    autodeploy:
        name: Auto deploy main to dev.auth.thx.network
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        needs: buildAndPushImage
        steps:
            - name: Install Node.js 16.x
              uses: actions/setup-node@v1
              with:
                  node-version: 16.x

            - name: Install deploy-scripts
              run: npm install -g thxprotocol/deploy-scripts

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-west-3

            - name: Deploy-script
              run: thx-deploy AuthDev sha-$(echo ${{github.sha}} | cut -c1-7)
